{
	"name": "AzureFlowADF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vendor_registry_raw_ingest",
						"type": "DatasetReference"
					},
					"name": "AzureADF"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Vendor_Registry_Silver",
						"type": "DatasetReference"
					},
					"name": "VendorRegistrySilver",
					"rejectedDataLinkedService": {
						"referenceName": "ls_blob_datalakelv426_adfspipeline1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "SelectColumns"
				},
				{
					"name": "AddMetaColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pipelineRunId as string",
				"}",
				"source(output(",
				"          vendor_id as string,",
				"          industry as string,",
				"          headquarters as string,",
				"          on_watchlist as boolean,",
				"          registration_date as date,",
				"          tier as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> AzureADF",
				"AddMetaColumns select(mapColumn(",
				"          vendor_id,",
				"          industry,",
				"          headquarters,",
				"          on_watchlist,",
				"          registration_date,",
				"          tier,",
				"          pipeline_run_metadata,",
				"          {source_tag },",
				"          ingestion_timestamp",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumns",
				"AzureADF derive(registration_date = year(registration_date),",
				"          pipeline_run_metadata = $pipelineRunId,",
				"          ingestion_timestamp = currentUTC(),",
				"          {source_tag } = 'vendor_registry_adf') ~> AddMetaColumns",
				"SelectColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> VendorRegistrySilver"
			]
		}
	}
}