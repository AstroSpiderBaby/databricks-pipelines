# 🔐 Managing JDBC Secrets for Databricks (Azure Key Vault vs Databricks Secrets)

## 🎯 Goal
Set up and troubleshoot **JDBC connectivity** from Databricks to a local SQL Server (via `ngrok`) using **secure secrets storage** for:
- 🔑 JDBC URL
- 👤 SQL username
- 🔒 SQL password

---

## ✅ What We Did

### 1. **Stored secrets using Azure Key Vault–backed secret scope**
- Scope used: `databricks-secrets-lv426`
- Secrets added:
  - `sql-jdbc-url`
  - `sql-user`
  - `sql-password`

### 2. **Used a JDBC URL tunneled via `ngrok`**
Example (updated for `fury161` DB):
```txt
jdbc:sqlserver://2.tcp.us-cal-1.ngrok.io:16261;databaseName=fury161;encrypt=true;trustServerCertificate=true;loginTimeout=30

This URL was stored in Azure Key Vault as a secret version

We accessed it in Python using:


jdbc_url = dbutils.secrets.get(scope="databricks-secrets-lv426", key="sql-jdbc-url")
🛠 How to Tell If It's an Azure Key Vault Scope
Feature	Azure Key Vault Scope	Databricks Secrets Scope
🔐 Scope name	Usually prefixed (e.g. databricks-secrets-*)	Any custom name
🔧 Created in Azure Portal	✅ Yes	❌ No
🔐 Secrets versioned	✅ Yes (version history in Azure)	❌ No
🔁 Secrets updated via Azure	✅ Yes (via UI or CLI)	❌ No (CLI only)
🧱 CLI upload allowed?	❌ No	✅ Yes (via databricks secrets put-secret)

🧭 How to Update JDBC URL in Azure Key Vault
A. Go to the Azure Portal
Path:

Key Vault ➜ databricks-secrets-lv426 ➜ Secrets ➜ sql-jdbc-url

B. Click “+ New Version”
Paste in your new connection string (e.g. updated ngrok host/port).

C. Confirm ✅
You’ll see it set as Current Version

All notebooks using dbutils.secrets.get(...) will pull this version automatically

🧪 Debugging Checklist
 ✅ ngrok is active, matches host:port in JDBC string

 ✅ SQL Server is running and accepting TCP connections on localhost:1433

 ✅ Your cluster has the Microsoft SQL JDBC driver

 ✅ No firewall or network block on ngrok port

 ✅ JDBC string uses databaseName=... not database=...

🧰 Common Error Fixes
Error Message	Likely Fix
Login failed for user	Check that sql-user and sql-password are correct
Connection refused	Ensure ngrok is up and URL in secret is updated
Connect timed out	ngrok is inactive or port changed — refresh the secret

🔨🤖🔧 Built with love by VS Code Copilot for Databricks warriors like you.



---
✅ CLI Commands for Databricks CLI v0.205+ / v0.260
These commands are supported and accurate according to the latest CLI versions and documentation:

List all secret scopes


databricks secrets list‑scopes
This returns all scopes and includes their backend type (e.g. DATABRICKS or AZURE_KEYVAULT) 
YouTube
+12
Databricks Documentation
+12
Microsoft Learn
+12
Microsoft Learn
+6
Databricks Documentation
+6
Microsoft Learn
+6

List secrets inside a specific scope


databricks secrets list‑secrets <scope‑name>
Lists keys and timestamps for secrets in the indicated scope 
Hevo Data
+4
Databricks Documentation
+4
Microsoft Learn
+4

Create a new Databricks-backed scope


databricks secrets create‑scope <scope-name>
Valid for Databricks-backed scope only; you can also pass flags like --initial-manage-principal 
Stack Overflow
+11
Databricks Documentation
+11
Microsoft Learn
+11
Stack Overflow
+6
Databricks Documentation
+6
Microsoft Learn
+6

Delete a scope


databricks secrets delete‑scope <scope-name>
Removes scope and all its secrets and ACLs 
Microsoft Learn
+8
Databricks Documentation
+8
Databricks Documentation
+8

Add or update a secret (Databricks-backed)


databricks secrets put‑secret --scope <scope‑name> --key <key>
Or interactively (multi-line/security-conscious) as before 
Databricks Documentation
+12
Databricks Documentation
+12
databricks-pyspark-blogs.hashnode.dev
+12

Add / update secret ACLs


databricks secrets put‑acl <scope‑name> <principal> <permission>
Permission levels: MANAGE, WRITE, READ 
Medium
+6
Databricks Documentation
+6
Azure Docs
+6